!!!
%html
  %head
    %title KIBAB Shop
    = stylesheet_link_tag 'application', 'media' => 'all'
    = javascript_include_tag 'manifest'
    = csrf_meta_tags

  %body
    %nav.navbar
      .nav_item
        = link_to 'KIBAB Shop', products_path
      .nav_item_2
        = link_to 'About', about_path_url
      -if @current_user
        .nav_item_2
          = link_to 'Shopping Cart', view_shopping_cart_path
        .nav_item_2
          = link_to 'Bookmarks', view_bookmarks_path
        .profile-dropdown{ style: 'position: relative;' }
          %a.dropdown-toggle{ href: '#', onclick: 'toggleDropdownMenu(event)', style: 'display: inline-block;' }
            = image_tag @current_user.pfp, width: "50", style: 'border-radius: 50%;'
          .dropdown-menu{ style: 'display: none; position: absolute; right: 0; top: 58px; background-color: #333; padding: 10px 0; box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2); z-index: 1000;' }
            %a{ href: user_path(@current_user), style: 'color: white; padding: 12px 16px; text-decoration: none; display: block; text-align: center;' }
              Profile
            %a{ href: '#', onclick: 'handleLogout(event)', style: 'color: white; padding: 12px 16px; text-decoration: none; display: block; text-align: center;' }
              Logout
    #main
      - if flash[:notice]
        #notice.message= flash[:notice]
      - elsif flash[:warning]
        #warning.message= flash[:warning]
      = yield

  :javascript
    function toggleDropdownMenu(event) {
      event.preventDefault();
      var dropdown = document.querySelector('.dropdown-menu');
      dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
    }

    function handleLogout(event) {
      event.preventDefault();
      var form = document.createElement('form');
      form.style.display = 'none';
      form.method = 'post';
      form.action = '#{logout_path_path}';
      // Rails expects a '_method' input with the value 'delete' to simulate DELETE request
      var methodInput = document.createElement('input');
      methodInput.setAttribute('type', 'hidden');
      methodInput.setAttribute('name', '_method');
      methodInput.setAttribute('value', 'delete');
      form.appendChild(methodInput);
      // CSRF Token setup
      var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      var csrfInput = document.createElement('input');
      csrfInput.setAttribute('type', 'hidden');
      csrfInput.setAttribute('name', 'authenticity_token');
      csrfInput.setAttribute('value', csrfToken);
      form.appendChild(csrfInput);
      // Add the form to the body and submit it
      document.body.appendChild(form);
      form.submit();
    }